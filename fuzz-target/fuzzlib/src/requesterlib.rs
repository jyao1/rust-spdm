// Copyright (c) 2022 Intel Corporation
//
// SPDX-License-Identifier: BSD-2-Clause-Patent

use super::*;
use spdmlib::protocol::*;

pub fn req_create_info() -> (common::SpdmConfigInfo, common::SpdmProvisionInfo) {
    let config_info = common::SpdmConfigInfo {
        spdm_version: [
            SpdmVersion::SpdmVersion10,
            SpdmVersion::SpdmVersion11,
            SpdmVersion::SpdmVersion12,
        ],
        req_capabilities: SpdmRequestCapabilityFlags::CERT_CAP
        | SpdmRequestCapabilityFlags::CHAL_CAP
        | SpdmRequestCapabilityFlags::ENCRYPT_CAP
        | SpdmRequestCapabilityFlags::MAC_CAP
        //| SpdmRequestCapabilityFlags::MUT_AUTH_CAP
        | SpdmRequestCapabilityFlags::KEY_EX_CAP
        | SpdmRequestCapabilityFlags::PSK_CAP
        | SpdmRequestCapabilityFlags::ENCAP_CAP
        | SpdmRequestCapabilityFlags::HBEAT_CAP
        | SpdmRequestCapabilityFlags::KEY_UPD_CAP, // | SpdmRequestCapabilityFlags::HANDSHAKE_IN_THE_CLEAR_CAP
        // | SpdmRequestCapabilityFlags::PUB_KEY_ID_CAP
        req_ct_exponent: 0,
        measurement_specification: SpdmMeasurementSpecification::DMTF,
        base_asym_algo: if USE_ECDSA {
            SpdmBaseAsymAlgo::TPM_ALG_ECDSA_ECC_NIST_P384
        } else {
            SpdmBaseAsymAlgo::TPM_ALG_RSASSA_3072
        },
        base_hash_algo: SpdmBaseHashAlgo::TPM_ALG_SHA_384,
        dhe_algo: SpdmDheAlgo::SECP_384_R1,
        aead_algo: SpdmAeadAlgo::AES_256_GCM,
        req_asym_algo: SpdmReqAsymAlgo::TPM_ALG_RSAPSS_2048,
        key_schedule_algo: SpdmKeyScheduleAlgo::SPDM_KEY_SCHEDULE,
        ..Default::default()
    };

    let mut peer_root_cert_data = SpdmCertChainData {
        ..Default::default()
    };
    let crate_dir = get_test_key_directory();
    let ca_file_path = if USE_ECDSA {
        "test_key/EcP384/ca.cert.der"
    } else {
        "test_key/Rsa3072/ca.cert.der"
    };
    let ca_cert = std::fs::read(crate_dir.join(ca_file_path)).expect("unable to read ca cert!");
    let inter_file_path = if USE_ECDSA {
        "test_key/EcP384/inter.cert.der"
    } else {
        "test_key/Rsa3072/inter.cert.der"
    };
    let inter_cert =
        std::fs::read(crate_dir.join(inter_file_path)).expect("unable to read inter cert!");
    let leaf_file_path = if USE_ECDSA {
        "test_key/EcP384/end_responder.cert.der"
    } else {
        "test_key/Rsa3072/end_responder.cert.der"
    };
    let leaf_cert =
        std::fs::read(crate_dir.join(leaf_file_path)).expect("unable to read leaf cert!");

    let ca_len = ca_cert.len();
    let inter_len = inter_cert.len();
    let leaf_len = leaf_cert.len();
    log::info!(
        "total cert size - {:?} = {:?} + {:?} + {:?}",
        ca_len + inter_len + leaf_len,
        ca_len,
        inter_len,
        leaf_len
    );
    peer_root_cert_data.data_size = (ca_len) as u16;
    peer_root_cert_data.data[0..ca_len].copy_from_slice(ca_cert.as_ref());

    let provision_info = common::SpdmProvisionInfo {
        my_cert_chain_data: [None, None, None, None, None, None, None, None],
        my_cert_chain: [None, None, None, None, None, None, None, None],
        peer_root_cert_data: Some(peer_root_cert_data),
    };

    (config_info, provision_info)
}

pub fn certificata_data() -> [[u8; 528]; 4] {
    [
        [
            0x1, 0x0, 0x1, 0x0, 0x84, 0x0, 0x0, 0x0, 0x11, 0x2, 0x0, 0x0, 0x0, 0x2, 0x8, 0x4, 0x8,
            0x6, 0x0, 0x0, 0x5a, 0x64, 0xb3, 0x8b, 0x5d, 0x5f, 0x4d, 0xb3, 0x5f, 0xb2, 0xaa, 0x1d,
            0x46, 0x9f, 0x6a, 0xdc, 0xca, 0x7f, 0xac, 0x85, 0xbe, 0xf0, 0x84, 0x10, 0x9c, 0xcd,
            0x54, 0x9, 0xf0, 0xab, 0x38, 0x3a, 0xaa, 0xf7, 0xa6, 0x2e, 0x3b, 0xd7, 0x81, 0x2c,
            0xea, 0x24, 0x7e, 0x14, 0xa9, 0x56, 0x9d, 0x28, 0x30, 0x82, 0x1, 0xcf, 0x30, 0x82, 0x1,
            0x56, 0xa0, 0x3, 0x2, 0x1, 0x2, 0x2, 0x14, 0x20, 0x3a, 0xc2, 0x59, 0xcc, 0xda, 0xcb,
            0xf6, 0x72, 0xf1, 0xc0, 0x1a, 0x62, 0x1a, 0x45, 0x82, 0x90, 0x24, 0xb8, 0xaf, 0x30,
            0xa, 0x6, 0x8, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x4, 0x3, 0x3, 0x30, 0x1f, 0x31, 0x1d,
            0x30, 0x1b, 0x6, 0x3, 0x55, 0x4, 0x3, 0xc, 0x14, 0x69, 0x6e, 0x74, 0x65, 0x6c, 0x20,
            0x74, 0x65, 0x73, 0x74, 0x20, 0x45, 0x43, 0x50, 0x32, 0x35, 0x36, 0x20, 0x43, 0x41,
            0x30, 0x1e, 0x17, 0xd, 0x32, 0x31, 0x30, 0x32, 0x30, 0x39, 0x30, 0x30, 0x35, 0x30,
            0x35, 0x38, 0x5a, 0x17, 0xd, 0x33, 0x31, 0x30, 0x32, 0x30, 0x37, 0x30, 0x30, 0x35,
            0x30, 0x35, 0x38, 0x5a, 0x30, 0x1f, 0x31, 0x1d, 0x30, 0x1b, 0x6, 0x3, 0x55, 0x4, 0x3,
            0xc, 0x14, 0x69, 0x6e, 0x74, 0x65, 0x6c, 0x20, 0x74, 0x65, 0x73, 0x74, 0x20, 0x45,
            0x43, 0x50, 0x32, 0x35, 0x36, 0x20, 0x43, 0x41, 0x30, 0x76, 0x30, 0x10, 0x6, 0x7, 0x2a,
            0x86, 0x48, 0xce, 0x3d, 0x2, 0x1, 0x6, 0x5, 0x2b, 0x81, 0x4, 0x0, 0x22, 0x3, 0x62, 0x0,
            0x4, 0x99, 0x8f, 0x81, 0x68, 0x9a, 0x83, 0x9b, 0x83, 0x39, 0xad, 0xe, 0x32, 0x8d, 0xb9,
            0x42, 0xd, 0xae, 0xcc, 0x91, 0xa9, 0xbc, 0x4a, 0xe1, 0xbb, 0x79, 0x4c, 0x22, 0xfa,
            0x3f, 0xc, 0x9d, 0x93, 0x3c, 0x1a, 0x2, 0x5c, 0xc2, 0x73, 0x5, 0xec, 0x43, 0x5d, 0x4,
            0x2, 0xb1, 0x68, 0xb3, 0xf4, 0xd8, 0xde, 0xc, 0x8d, 0x53, 0xb7, 0x4, 0x8e, 0xa1, 0x43,
            0x9a, 0xeb, 0x31, 0xd, 0xaa, 0xce, 0x89, 0x2d, 0xba, 0x73, 0xda, 0x4f, 0x1e, 0x39,
            0x5d, 0x92, 0x11, 0x21, 0x38, 0xb4, 0x0, 0xd4, 0xf5, 0x55, 0x8c, 0xe8, 0x71, 0x30,
            0x3d, 0x46, 0x83, 0xf4, 0xc4, 0x52, 0x50, 0xda, 0x12, 0x5b, 0xa3, 0x53, 0x30, 0x51,
            0x30, 0x1d, 0x6, 0x3, 0x55, 0x1d, 0xe, 0x4, 0x16, 0x4, 0x14, 0xcf, 0x9, 0xd4, 0x7a,
            0xee, 0x8, 0x90, 0x62, 0xbf, 0xe6, 0x9c, 0xb4, 0xb9, 0xdf, 0xe1, 0x41, 0x33, 0x1c, 0x3,
            0xa5, 0x30, 0x1f, 0x6, 0x3, 0x55, 0x1d, 0x23, 0x4, 0x18, 0x30, 0x16, 0x80, 0x14, 0xcf,
            0x9, 0xd4, 0x7a, 0xee, 0x8, 0x90, 0x62, 0xbf, 0xe6, 0x9c, 0xb4, 0xb9, 0xdf, 0xe1, 0x41,
            0x33, 0x1c, 0x3, 0xa5, 0x30, 0xf, 0x6, 0x3, 0x55, 0x1d, 0x13, 0x1, 0x1, 0xff, 0x4, 0x5,
            0x30, 0x3, 0x1, 0x1, 0xff, 0x30, 0xa, 0x6, 0x8, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x4, 0x3,
            0x3, 0x3, 0x67, 0x0, 0x30, 0x64, 0x2, 0x30, 0x5a, 0xb4, 0xf5, 0x95, 0x25, 0x82, 0xf6,
            0x68, 0x3e, 0x49, 0xc7, 0xb4, 0xbb, 0x42, 0x81, 0x91, 0x7e, 0x38, 0xd0, 0x2d, 0xac,
            0x53, 0xae, 0x8e, 0xb0, 0x51, 0x50, 0xaa, 0xf8, 0x7e, 0xff, 0xc0, 0x30, 0xab, 0xd5,
            0x8, 0x5b, 0x6, 0xf7, 0xe1, 0xbf, 0x39, 0xd2, 0x3e, 0xae, 0xbf, 0x8e, 0x48, 0x2, 0x30,
            0x9, 0x75, 0xa8, 0xc0, 0x6f, 0x4f, 0x3c, 0xad, 0x5d, 0x4e, 0x4f, 0xf8, 0x2c, 0x3b,
            0x39, 0x46, 0xa0, 0xdf, 0x83, 0x8e, 0xb5, 0xd3, 0x61, 0x61, 0x59, 0xbc, 0x39, 0xd7,
            0xad, 0x68, 0x5e, 0xd, 0x4f, 0x3f, 0xe2, 0xca, 0xc1, 0x74, 0x8f, 0x47, 0x37,
        ],
        [
            0x1, 0x0, 0x1, 0x0, 0x84, 0x0, 0x0, 0x0, 0x11, 0x2, 0x0, 0x0, 0x0, 0x2, 0x8, 0x2, 0x11,
            0xc8, 0x22, 0x59, 0x6f, 0x64, 0x52, 0x30, 0x82, 0x1, 0xd7, 0x30, 0x82, 0x1, 0x5d, 0xa0,
            0x3, 0x2, 0x1, 0x2, 0x2, 0x1, 0x1, 0x30, 0xa, 0x6, 0x8, 0x2a, 0x86, 0x48, 0xce, 0x3d,
            0x4, 0x3, 0x3, 0x30, 0x1f, 0x31, 0x1d, 0x30, 0x1b, 0x6, 0x3, 0x55, 0x4, 0x3, 0xc, 0x14,
            0x69, 0x6e, 0x74, 0x65, 0x6c, 0x20, 0x74, 0x65, 0x73, 0x74, 0x20, 0x45, 0x43, 0x50,
            0x32, 0x35, 0x36, 0x20, 0x43, 0x41, 0x30, 0x1e, 0x17, 0xd, 0x32, 0x31, 0x30, 0x32,
            0x30, 0x39, 0x30, 0x30, 0x35, 0x30, 0x35, 0x39, 0x5a, 0x17, 0xd, 0x33, 0x31, 0x30,
            0x32, 0x30, 0x37, 0x30, 0x30, 0x35, 0x30, 0x35, 0x39, 0x5a, 0x30, 0x2e, 0x31, 0x2c,
            0x30, 0x2a, 0x6, 0x3, 0x55, 0x4, 0x3, 0xc, 0x23, 0x69, 0x6e, 0x74, 0x65, 0x6c, 0x20,
            0x74, 0x65, 0x73, 0x74, 0x20, 0x45, 0x43, 0x50, 0x32, 0x35, 0x36, 0x20, 0x69, 0x6e,
            0x74, 0x65, 0x72, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x20, 0x63, 0x65, 0x72,
            0x74, 0x30, 0x76, 0x30, 0x10, 0x6, 0x7, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x2, 0x1, 0x6,
            0x5, 0x2b, 0x81, 0x4, 0x0, 0x22, 0x3, 0x62, 0x0, 0x4, 0x77, 0x1b, 0x24, 0xf6, 0xc6,
            0x76, 0x1f, 0xb8, 0x30, 0x7, 0x8b, 0xb8, 0xa3, 0x9e, 0xc0, 0x26, 0xc1, 0xea, 0x7d,
            0xfc, 0x29, 0x7d, 0xe0, 0x59, 0xb2, 0x64, 0x32, 0x75, 0x4a, 0xe3, 0x2, 0x64, 0x3c,
            0xbc, 0x85, 0x8e, 0xc6, 0xec, 0xef, 0xb0, 0x79, 0xf4, 0xc1, 0xa4, 0xb9, 0xbb, 0x29,
            0x6b, 0xae, 0xad, 0xf0, 0x7d, 0x63, 0xc6, 0xaf, 0xb3, 0x73, 0x5e, 0x4f, 0x3f, 0xfe,
            0x89, 0x8a, 0xbb, 0x7d, 0x2b, 0x60, 0x3e, 0x16, 0xba, 0x82, 0xcf, 0xa4, 0x70, 0x4,
            0x85, 0xc3, 0xa3, 0x3c, 0x5e, 0x6a, 0xa0, 0xef, 0xda, 0xd5, 0x20, 0x30, 0x19, 0xba,
            0x79, 0x95, 0xb0, 0xc2, 0x7f, 0x4c, 0xdd, 0xa3, 0x5e, 0x30, 0x5c, 0x30, 0xc, 0x6, 0x3,
            0x55, 0x1d, 0x13, 0x4, 0x5, 0x30, 0x3, 0x1, 0x1, 0xff, 0x30, 0xb, 0x6, 0x3, 0x55, 0x1d,
            0xf, 0x4, 0x4, 0x3, 0x2, 0x1, 0xfe, 0x30, 0x1d, 0x6, 0x3, 0x55, 0x1d, 0xe, 0x4, 0x16,
            0x4, 0x14, 0x12, 0xe0, 0x1a, 0x23, 0xc6, 0x23, 0xe4, 0x2, 0x58, 0xb, 0x6, 0xac, 0x90,
            0xfa, 0x4b, 0x80, 0x3d, 0xc9, 0xf1, 0x1d, 0x30, 0x20, 0x6, 0x3, 0x55, 0x1d, 0x25, 0x1,
            0x1, 0xff, 0x4, 0x16, 0x30, 0x14, 0x6, 0x8, 0x2b, 0x6, 0x1, 0x5, 0x5, 0x7, 0x3, 0x1,
            0x6, 0x8, 0x2b, 0x6, 0x1, 0x5, 0x5, 0x7, 0x3, 0x2, 0x30, 0xa, 0x6, 0x8, 0x2a, 0x86,
            0x48, 0xce, 0x3d, 0x4, 0x3, 0x3, 0x3, 0x68, 0x0, 0x30, 0x65, 0x2, 0x30, 0x3, 0x32,
            0xb1, 0x8b, 0x20, 0xf4, 0x76, 0xda, 0x8c, 0x83, 0x96, 0x87, 0x55, 0xd9, 0x12, 0x72,
            0xbd, 0x58, 0x4d, 0xa, 0x37, 0xaf, 0x29, 0x95, 0x1d, 0x36, 0xc4, 0x9e, 0xa5, 0xcd,
            0xe2, 0x3b, 0xf5, 0xe0, 0x7a, 0x64, 0x36, 0x1e, 0xd4, 0xf1, 0xe1, 0xbb, 0x14, 0x57,
            0x9e, 0x86, 0x82, 0x72, 0x2, 0x31, 0x0, 0xc0, 0xd6, 0x2, 0x99, 0x50, 0x76, 0x34, 0x16,
            0xd6, 0x51, 0x9c, 0xc4, 0x86, 0x8, 0x68, 0x94, 0xbf, 0x3c, 0x9, 0x7e, 0x10, 0xe5, 0x62,
            0x8a, 0xba, 0x48, 0xa, 0xa5, 0xed, 0x1a, 0x6a, 0xf6, 0x3c, 0x2f, 0x4d, 0x38, 0x5d,
            0x7d, 0x5c, 0x60, 0x63, 0x88, 0x84, 0x5d, 0x49, 0x33, 0xe2, 0xa7, 0x30, 0x82, 0x2,
            0x22, 0x30, 0x82, 0x1, 0xa8, 0xa0, 0x3, 0x2, 0x1, 0x2, 0x2, 0x1, 0x3, 0x30, 0xa, 0x6,
            0x8, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x4, 0x3, 0x3, 0x30, 0x2e,
        ],
        [
            0x1, 0x0, 0x1, 0x0, 0x84, 0x0, 0x0, 0x0, 0x11, 0x2, 0x0, 0x0, 0x0, 0x2, 0x8, 0x0, 0x31,
            0x2c, 0x30, 0x2a, 0x6, 0x3, 0x55, 0x4, 0x3, 0xc, 0x23, 0x69, 0x6e, 0x74, 0x65, 0x6c,
            0x20, 0x74, 0x65, 0x73, 0x74, 0x20, 0x45, 0x43, 0x50, 0x32, 0x35, 0x36, 0x20, 0x69,
            0x6e, 0x74, 0x65, 0x72, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x20, 0x63, 0x65,
            0x72, 0x74, 0x30, 0x1e, 0x17, 0xd, 0x32, 0x31, 0x30, 0x32, 0x30, 0x39, 0x30, 0x30,
            0x35, 0x30, 0x35, 0x39, 0x5a, 0x17, 0xd, 0x32, 0x32, 0x30, 0x32, 0x30, 0x39, 0x30,
            0x30, 0x35, 0x30, 0x35, 0x39, 0x5a, 0x30, 0x2b, 0x31, 0x29, 0x30, 0x27, 0x6, 0x3, 0x55,
            0x4, 0x3, 0xc, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x6c, 0x20, 0x74, 0x65, 0x73, 0x74, 0x20,
            0x45, 0x43, 0x50, 0x32, 0x35, 0x36, 0x20, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64,
            0x65, 0x72, 0x20, 0x63, 0x65, 0x72, 0x74, 0x30, 0x76, 0x30, 0x10, 0x6, 0x7, 0x2a, 0x86,
            0x48, 0xce, 0x3d, 0x2, 0x1, 0x6, 0x5, 0x2b, 0x81, 0x4, 0x0, 0x22, 0x3, 0x62, 0x0, 0x4,
            0x6c, 0x22, 0x41, 0xdf, 0xb7, 0xe4, 0xd6, 0x8d, 0x53, 0x72, 0x4e, 0x4a, 0x1b, 0x99,
            0x82, 0xe6, 0x56, 0xd2, 0x2d, 0x97, 0x4b, 0x98, 0x40, 0xa9, 0x99, 0xd6, 0xd, 0xd8,
            0xe9, 0xa6, 0xfc, 0x74, 0xb9, 0xce, 0x89, 0x48, 0xa7, 0xb5, 0x9, 0xb6, 0x24, 0x49,
            0xd6, 0x23, 0xb3, 0x5f, 0x3a, 0xf0, 0x99, 0xb0, 0xca, 0x63, 0x7d, 0x24, 0xfe, 0xe9,
            0x12, 0x19, 0xf, 0xc2, 0x73, 0x1c, 0xe3, 0x76, 0x91, 0xec, 0x57, 0x6c, 0xcd, 0x7b,
            0xab, 0x32, 0xfd, 0x6d, 0x6e, 0x92, 0x7d, 0x37, 0x60, 0x1, 0xdb, 0x13, 0x92, 0x3b,
            0x77, 0xf7, 0x12, 0x97, 0x1d, 0x5e, 0xe3, 0xb9, 0x15, 0x83, 0xaf, 0x89, 0xa3, 0x81,
            0x9c, 0x30, 0x81, 0x99, 0x30, 0xc, 0x6, 0x3, 0x55, 0x1d, 0x13, 0x1, 0x1, 0xff, 0x4,
            0x2, 0x30, 0x0, 0x30, 0xb, 0x6, 0x3, 0x55, 0x1d, 0xf, 0x4, 0x4, 0x3, 0x2, 0x5, 0xe0,
            0x30, 0x1d, 0x6, 0x3, 0x55, 0x1d, 0xe, 0x4, 0x16, 0x4, 0x14, 0x48, 0x1f, 0x5d, 0x95,
            0xce, 0x89, 0xd4, 0x7d, 0xa4, 0x4c, 0x21, 0x8f, 0x5b, 0xd5, 0x50, 0x96, 0xff, 0xba,
            0xe2, 0xee, 0x30, 0x31, 0x6, 0x3, 0x55, 0x1d, 0x11, 0x4, 0x2a, 0x30, 0x28, 0xa0, 0x26,
            0x6, 0xa, 0x2b, 0x6, 0x1, 0x4, 0x1, 0x83, 0x1c, 0x82, 0x12, 0x1, 0xa0, 0x18, 0xc, 0x16,
            0x41, 0x43, 0x4d, 0x45, 0x3a, 0x57, 0x49, 0x44, 0x47, 0x45, 0x54, 0x3a, 0x31, 0x32,
            0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x30, 0x30, 0x2a, 0x6, 0x3, 0x55, 0x1d, 0x25,
            0x1, 0x1, 0xff, 0x4, 0x20, 0x30, 0x1e, 0x6, 0x8, 0x2b, 0x6, 0x1, 0x5, 0x5, 0x7, 0x3,
            0x1, 0x6, 0x8, 0x2b, 0x6, 0x1, 0x5, 0x5, 0x7, 0x3, 0x2, 0x6, 0x8, 0x2b, 0x6, 0x1, 0x5,
            0x5, 0x7, 0x3, 0x9, 0x30, 0xa, 0x6, 0x8, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x4, 0x3, 0x3,
            0x3, 0x68, 0x0, 0x30, 0x65, 0x2, 0x30, 0x8, 0xe6, 0x1f, 0xd, 0xdf, 0x18, 0xd3, 0x2f,
            0x50, 0x49, 0x99, 0xb0, 0xe2, 0x64, 0x95, 0x30, 0xa9, 0x5a, 0xbf, 0x83, 0x76, 0xae,
            0x4a, 0x39, 0xd8, 0xe2, 0x51, 0x12, 0x84, 0x9c, 0xbe, 0x11, 0x1d, 0x3b, 0x77, 0x20,
            0x6f, 0x5, 0x6c, 0xc7, 0x98, 0xb2, 0xba, 0xb8, 0x96, 0x75, 0x25, 0xcf, 0x2, 0x31, 0x0,
            0x93, 0x12, 0x5b, 0x66, 0x93, 0xc0, 0xe7, 0x56, 0x1b, 0x68, 0x28, 0x27, 0xd8, 0x8e,
            0x69, 0xaa, 0x30, 0x76, 0x5, 0x6f, 0x4b, 0xd0, 0xce, 0x10, 0xf, 0xf8, 0xdf, 0x4a, 0xab,
            0x9b, 0x4d, 0xb1, 0x47, 0xe4, 0xcd, 0xce, 0xce, 0x48, 0xd, 0xf8,
        ],
        [
            0x1, 0x0, 0x1, 0x0, 0x6, 0x0, 0x0, 0x0, 0x11, 0x2, 0x0, 0x0, 0x8, 0x0, 0x0, 0x0, 0x35,
            0x3d, 0xbc, 0x25, 0xce, 0xec, 0xb9, 0xca, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
            0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
            0x0, 0x0,
        ],
    ]
}

const RSP_CERT_CHAIN_PAYLOAD: [u8; 1545] = [
    0x09, 0x06, 0x00, 0x00, 0x4e, 0x75, 0x0a, 0x31, 0x8a, 0x1c, 0x58, 0x20, 0x15, 0xa2, 0x8c, 0x03,
    0x4d, 0xb2, 0x96, 0x25, 0x7d, 0x8f, 0xef, 0x31, 0x47, 0x45, 0x3e, 0x40, 0x76, 0xfc, 0x45, 0x92,
    0x12, 0x66, 0xa8, 0x6e, 0x27, 0xfc, 0x41, 0x31, 0x7e, 0x72, 0x32, 0x53, 0x54, 0x15, 0x3a, 0x92,
    0x54, 0xff, 0xbd, 0xcd, 0x30, 0x82, 0x01, 0xD0, 0x30, 0x82, 0x01, 0x56, 0xA0, 0x03, 0x02, 0x01,
    0x02, 0x02, 0x14, 0x00, 0xCA, 0x2F, 0x39, 0xE8, 0xFA, 0x16, 0xFD, 0xB0, 0x34, 0x0C, 0x85, 0x50,
    0x8F, 0x5D, 0x07, 0xE2, 0x6E, 0x48, 0x34, 0x30, 0x0A, 0x06, 0x08, 0x2A, 0x86, 0x48, 0xCE, 0x3D,
    0x04, 0x03, 0x03, 0x30, 0x1F, 0x31, 0x1D, 0x30, 0x1B, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0C, 0x14,
    0x69, 0x6E, 0x74, 0x65, 0x6C, 0x20, 0x74, 0x65, 0x73, 0x74, 0x20, 0x45, 0x43, 0x50, 0x32, 0x35,
    0x36, 0x20, 0x43, 0x41, 0x30, 0x1E, 0x17, 0x0D, 0x32, 0x32, 0x30, 0x31, 0x30, 0x35, 0x30, 0x36,
    0x30, 0x38, 0x33, 0x33, 0x5A, 0x17, 0x0D, 0x33, 0x32, 0x30, 0x31, 0x30, 0x33, 0x30, 0x36, 0x30,
    0x38, 0x33, 0x33, 0x5A, 0x30, 0x1F, 0x31, 0x1D, 0x30, 0x1B, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0C,
    0x14, 0x69, 0x6E, 0x74, 0x65, 0x6C, 0x20, 0x74, 0x65, 0x73, 0x74, 0x20, 0x45, 0x43, 0x50, 0x32,
    0x35, 0x36, 0x20, 0x43, 0x41, 0x30, 0x76, 0x30, 0x10, 0x06, 0x07, 0x2A, 0x86, 0x48, 0xCE, 0x3D,
    0x02, 0x01, 0x06, 0x05, 0x2B, 0x81, 0x04, 0x00, 0x22, 0x03, 0x62, 0x00, 0x04, 0x92, 0x2F, 0xD3,
    0xBD, 0x8B, 0x60, 0xBB, 0xF7, 0x5E, 0xE4, 0x80, 0x25, 0x14, 0x10, 0x47, 0x8C, 0x79, 0xAD, 0x82,
    0xFB, 0x41, 0x3A, 0xC4, 0xAD, 0x39, 0xF8, 0x01, 0x1A, 0x9D, 0x47, 0x29, 0x90, 0xD6, 0xBB, 0x86,
    0x41, 0x07, 0x8D, 0x86, 0x66, 0x11, 0xDA, 0x6D, 0xC9, 0xED, 0x9B, 0x0E, 0x2A, 0xA1, 0x2A, 0x51,
    0xC2, 0xDD, 0x55, 0xAB, 0x3D, 0x1D, 0x7B, 0x3C, 0x3D, 0x38, 0x28, 0x80, 0x72, 0x61, 0x20, 0x3E,
    0x25, 0xF9, 0x99, 0x39, 0x82, 0x4E, 0x4A, 0xBA, 0x93, 0xD1, 0xAB, 0x1F, 0xCE, 0x5A, 0x9B, 0x3D,
    0xBE, 0xA5, 0xBC, 0x1B, 0x96, 0xF0, 0xB7, 0xB5, 0xFB, 0x10, 0xF9, 0x23, 0x90, 0xA3, 0x53, 0x30,
    0x51, 0x30, 0x1D, 0x06, 0x03, 0x55, 0x1D, 0x0E, 0x04, 0x16, 0x04, 0x14, 0x14, 0xC4, 0xE7, 0xA6,
    0x7C, 0x63, 0x3F, 0xDF, 0x13, 0xF2, 0xB1, 0x36, 0x56, 0x63, 0xF9, 0xC1, 0xEA, 0xDD, 0x78, 0x10,
    0x30, 0x1F, 0x06, 0x03, 0x55, 0x1D, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0x14, 0xC4, 0xE7,
    0xA6, 0x7C, 0x63, 0x3F, 0xDF, 0x13, 0xF2, 0xB1, 0x36, 0x56, 0x63, 0xF9, 0xC1, 0xEA, 0xDD, 0x78,
    0x10, 0x30, 0x0F, 0x06, 0x03, 0x55, 0x1D, 0x13, 0x01, 0x01, 0xFF, 0x04, 0x05, 0x30, 0x03, 0x01,
    0x01, 0xFF, 0x30, 0x0A, 0x06, 0x08, 0x2A, 0x86, 0x48, 0xCE, 0x3D, 0x04, 0x03, 0x03, 0x03, 0x68,
    0x00, 0x30, 0x65, 0x02, 0x31, 0x00, 0xD7, 0x9C, 0x7F, 0x26, 0x91, 0x34, 0xA5, 0x2B, 0x79, 0xEA,
    0x66, 0x15, 0x00, 0x88, 0x0A, 0x4D, 0xE7, 0xAD, 0x71, 0xC6, 0x2E, 0xE4, 0x7E, 0x37, 0xE1, 0x86,
    0xEB, 0xE8, 0x55, 0xB0, 0x2F, 0xC5, 0xF3, 0xA9, 0xE0, 0x90, 0xF9, 0x0B, 0x82, 0xC5, 0xDF, 0x4A,
    0x35, 0x9A, 0x0D, 0x35, 0x38, 0x4B, 0x02, 0x30, 0x40, 0xA7, 0xFE, 0x70, 0x39, 0x7B, 0x4B, 0xD7,
    0xC2, 0x28, 0x72, 0x93, 0x93, 0x0C, 0x62, 0x12, 0x14, 0xF0, 0x70, 0x74, 0x0F, 0xFC, 0xB1, 0x21,
    0x60, 0x40, 0x6D, 0x13, 0xA3, 0x59, 0x0E, 0x27, 0x06, 0xC1, 0x73, 0x4E, 0xCA, 0x40, 0x4C, 0x2D,
    0xF5, 0x96, 0x48, 0x66, 0x05, 0xB1, 0xA6, 0x08, 0x30, 0x82, 0x01, 0xD7, 0x30, 0x82, 0x01, 0x5D,
    0xA0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x01, 0x01, 0x30, 0x0A, 0x06, 0x08, 0x2A, 0x86, 0x48, 0xCE,
    0x3D, 0x04, 0x03, 0x03, 0x30, 0x1F, 0x31, 0x1D, 0x30, 0x1B, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0C,
    0x14, 0x69, 0x6E, 0x74, 0x65, 0x6C, 0x20, 0x74, 0x65, 0x73, 0x74, 0x20, 0x45, 0x43, 0x50, 0x32,
    0x35, 0x36, 0x20, 0x43, 0x41, 0x30, 0x1E, 0x17, 0x0D, 0x32, 0x32, 0x30, 0x31, 0x30, 0x35, 0x30,
    0x36, 0x30, 0x38, 0x33, 0x34, 0x5A, 0x17, 0x0D, 0x33, 0x32, 0x30, 0x31, 0x30, 0x33, 0x30, 0x36,
    0x30, 0x38, 0x33, 0x34, 0x5A, 0x30, 0x2E, 0x31, 0x2C, 0x30, 0x2A, 0x06, 0x03, 0x55, 0x04, 0x03,
    0x0C, 0x23, 0x69, 0x6E, 0x74, 0x65, 0x6C, 0x20, 0x74, 0x65, 0x73, 0x74, 0x20, 0x45, 0x43, 0x50,
    0x32, 0x35, 0x36, 0x20, 0x69, 0x6E, 0x74, 0x65, 0x72, 0x6D, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65,
    0x20, 0x63, 0x65, 0x72, 0x74, 0x30, 0x76, 0x30, 0x10, 0x06, 0x07, 0x2A, 0x86, 0x48, 0xCE, 0x3D,
    0x02, 0x01, 0x06, 0x05, 0x2B, 0x81, 0x04, 0x00, 0x22, 0x03, 0x62, 0x00, 0x04, 0x12, 0xAF, 0x50,
    0xBF, 0xAF, 0xFB, 0xC8, 0x03, 0x23, 0x41, 0x27, 0xFA, 0xEF, 0xEC, 0x35, 0xC4, 0xAE, 0x96, 0xCB,
    0xF4, 0xAE, 0xFB, 0x74, 0x58, 0x6B, 0xF5, 0x8F, 0x60, 0x38, 0x28, 0x76, 0x0B, 0x29, 0xA4, 0xCA,
    0xF4, 0x6C, 0x2D, 0x59, 0x28, 0xF5, 0xAB, 0x92, 0xB7, 0x6B, 0x6F, 0x3A, 0xC0, 0x91, 0x9F, 0x45,
    0xD1, 0x3C, 0xA0, 0xC8, 0x80, 0x67, 0xFF, 0x4B, 0x9F, 0xE8, 0x01, 0x17, 0x08, 0xCB, 0x4C, 0x17,
    0x23, 0xC2, 0xF0, 0x07, 0xE4, 0xCD, 0x37, 0x26, 0x9F, 0x41, 0xA4, 0xFE, 0x7D, 0x80, 0x1C, 0x23,
    0x43, 0xCB, 0x53, 0x6C, 0xC1, 0x0F, 0x5F, 0x4A, 0xC8, 0x6A, 0x31, 0xE6, 0xEE, 0xA3, 0x5E, 0x30,
    0x5C, 0x30, 0x0C, 0x06, 0x03, 0x55, 0x1D, 0x13, 0x04, 0x05, 0x30, 0x03, 0x01, 0x01, 0xFF, 0x30,
    0x0B, 0x06, 0x03, 0x55, 0x1D, 0x0F, 0x04, 0x04, 0x03, 0x02, 0x01, 0xFE, 0x30, 0x1D, 0x06, 0x03,
    0x55, 0x1D, 0x0E, 0x04, 0x16, 0x04, 0x14, 0x42, 0xBC, 0xED, 0xBA, 0xD1, 0x5A, 0x68, 0xDF, 0x71,
    0x41, 0xF8, 0xA5, 0x0E, 0x36, 0xCA, 0xF5, 0xDF, 0x52, 0x50, 0x09, 0x30, 0x20, 0x06, 0x03, 0x55,
    0x1D, 0x25, 0x01, 0x01, 0xFF, 0x04, 0x16, 0x30, 0x14, 0x06, 0x08, 0x2B, 0x06, 0x01, 0x05, 0x05,
    0x07, 0x03, 0x01, 0x06, 0x08, 0x2B, 0x06, 0x01, 0x05, 0x05, 0x07, 0x03, 0x02, 0x30, 0x0A, 0x06,
    0x08, 0x2A, 0x86, 0x48, 0xCE, 0x3D, 0x04, 0x03, 0x03, 0x03, 0x68, 0x00, 0x30, 0x65, 0x02, 0x31,
    0x00, 0x9A, 0xFD, 0xD5, 0x7E, 0x34, 0x74, 0x19, 0x09, 0xE1, 0x26, 0x45, 0xF2, 0xBC, 0x3F, 0x25,
    0xD4, 0x47, 0x22, 0x19, 0x68, 0x23, 0xE4, 0x6A, 0xE5, 0x35, 0xD6, 0x9A, 0x4E, 0xA5, 0x23, 0xB2,
    0xD3, 0xC0, 0x9A, 0x68, 0x88, 0xCE, 0x99, 0x59, 0x9D, 0x55, 0x18, 0x96, 0x4D, 0xD3, 0x1C, 0x3B,
    0x52, 0x02, 0x30, 0x1C, 0x08, 0xDE, 0x61, 0x7F, 0x5B, 0xA7, 0xC8, 0x6B, 0xAF, 0x8D, 0x9D, 0xF5,
    0x3A, 0xC1, 0x54, 0xE5, 0x5F, 0x21, 0xC7, 0x69, 0x57, 0xDB, 0x63, 0xC4, 0x45, 0x09, 0x66, 0xAB,
    0x70, 0xAB, 0xC0, 0xBF, 0xB2, 0xC0, 0x6A, 0x7F, 0x51, 0xDA, 0xE8, 0xAE, 0x93, 0xC4, 0x43, 0x33,
    0x4A, 0x07, 0xA4, 0x30, 0x82, 0x02, 0x22, 0x30, 0x82, 0x01, 0xA8, 0xA0, 0x03, 0x02, 0x01, 0x02,
    0x02, 0x01, 0x03, 0x30, 0x0A, 0x06, 0x08, 0x2A, 0x86, 0x48, 0xCE, 0x3D, 0x04, 0x03, 0x03, 0x30,
    0x2E, 0x31, 0x2C, 0x30, 0x2A, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0C, 0x23, 0x69, 0x6E, 0x74, 0x65,
    0x6C, 0x20, 0x74, 0x65, 0x73, 0x74, 0x20, 0x45, 0x43, 0x50, 0x32, 0x35, 0x36, 0x20, 0x69, 0x6E,
    0x74, 0x65, 0x72, 0x6D, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x20, 0x63, 0x65, 0x72, 0x74, 0x30,
    0x1E, 0x17, 0x0D, 0x32, 0x32, 0x30, 0x31, 0x30, 0x35, 0x30, 0x36, 0x30, 0x38, 0x33, 0x34, 0x5A,
    0x17, 0x0D, 0x33, 0x32, 0x30, 0x31, 0x30, 0x33, 0x30, 0x36, 0x30, 0x38, 0x33, 0x34, 0x5A, 0x30,
    0x2B, 0x31, 0x29, 0x30, 0x27, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0C, 0x20, 0x69, 0x6E, 0x74, 0x65,
    0x6C, 0x20, 0x74, 0x65, 0x73, 0x74, 0x20, 0x45, 0x43, 0x50, 0x32, 0x35, 0x36, 0x20, 0x72, 0x65,
    0x73, 0x70, 0x6F, 0x6E, 0x64, 0x65, 0x72, 0x20, 0x63, 0x65, 0x72, 0x74, 0x30, 0x76, 0x30, 0x10,
    0x06, 0x07, 0x2A, 0x86, 0x48, 0xCE, 0x3D, 0x02, 0x01, 0x06, 0x05, 0x2B, 0x81, 0x04, 0x00, 0x22,
    0x03, 0x62, 0x00, 0x04, 0x8C, 0xF8, 0x84, 0x9D, 0x11, 0x07, 0x49, 0xCA, 0x1C, 0xD0, 0xB5, 0x11,
    0xBC, 0xE3, 0x4F, 0x38, 0x3C, 0xF0, 0xC5, 0x8D, 0x73, 0x5A, 0xA7, 0x63, 0x7E, 0x5F, 0x62, 0x60,
    0x7F, 0x10, 0x43, 0x34, 0xC8, 0x4F, 0x2C, 0xBC, 0x70, 0x8F, 0x4D, 0xA2, 0xFD, 0x4E, 0x03, 0x89,
    0x16, 0x49, 0xCA, 0x40, 0x6A, 0x91, 0x18, 0x09, 0x7F, 0x27, 0xEF, 0xE4, 0xA6, 0x26, 0x1A, 0xFD,
    0xD4, 0xD1, 0x57, 0xDB, 0x5B, 0x1B, 0x75, 0x05, 0xF9, 0x15, 0x9D, 0x33, 0x34, 0xBE, 0x90, 0xB7,
    0x5E, 0xD7, 0x05, 0xB9, 0x73, 0x85, 0x1E, 0x4A, 0xD3, 0x00, 0x5B, 0x7D, 0x10, 0x68, 0xBF, 0x4F,
    0xCA, 0xE6, 0x38, 0x4C, 0xA3, 0x81, 0x9C, 0x30, 0x81, 0x99, 0x30, 0x0C, 0x06, 0x03, 0x55, 0x1D,
    0x13, 0x01, 0x01, 0xFF, 0x04, 0x02, 0x30, 0x00, 0x30, 0x0B, 0x06, 0x03, 0x55, 0x1D, 0x0F, 0x04,
    0x04, 0x03, 0x02, 0x05, 0xE0, 0x30, 0x1D, 0x06, 0x03, 0x55, 0x1D, 0x0E, 0x04, 0x16, 0x04, 0x14,
    0x1D, 0xEE, 0x4B, 0x09, 0x37, 0x82, 0xED, 0x77, 0x92, 0x71, 0xA7, 0x4E, 0x3C, 0xAD, 0x32, 0xAD,
    0xB8, 0xF7, 0x8E, 0x9B, 0x30, 0x31, 0x06, 0x03, 0x55, 0x1D, 0x11, 0x04, 0x2A, 0x30, 0x28, 0xA0,
    0x26, 0x06, 0x0A, 0x2B, 0x06, 0x01, 0x04, 0x01, 0x83, 0x1C, 0x82, 0x12, 0x01, 0xA0, 0x18, 0x0C,
    0x16, 0x41, 0x43, 0x4D, 0x45, 0x3A, 0x57, 0x49, 0x44, 0x47, 0x45, 0x54, 0x3A, 0x31, 0x32, 0x33,
    0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x30, 0x30, 0x2A, 0x06, 0x03, 0x55, 0x1D, 0x25, 0x01, 0x01,
    0xFF, 0x04, 0x20, 0x30, 0x1E, 0x06, 0x08, 0x2B, 0x06, 0x01, 0x05, 0x05, 0x07, 0x03, 0x01, 0x06,
    0x08, 0x2B, 0x06, 0x01, 0x05, 0x05, 0x07, 0x03, 0x02, 0x06, 0x08, 0x2B, 0x06, 0x01, 0x05, 0x05,
    0x07, 0x03, 0x09, 0x30, 0x0A, 0x06, 0x08, 0x2A, 0x86, 0x48, 0xCE, 0x3D, 0x04, 0x03, 0x03, 0x03,
    0x68, 0x00, 0x30, 0x65, 0x02, 0x30, 0x09, 0x0D, 0x98, 0x7A, 0xD6, 0xD1, 0x9A, 0x43, 0x45, 0x1E,
    0xBB, 0xC1, 0x0B, 0x23, 0x2E, 0xA4, 0x8A, 0x10, 0x32, 0xDB, 0xE1, 0x89, 0xBE, 0xDA, 0x6A, 0x51,
    0x36, 0x24, 0x48, 0x1F, 0x2F, 0x66, 0xA2, 0x6B, 0xDB, 0xAB, 0x78, 0x5E, 0x4A, 0x5C, 0x57, 0x36,
    0x9E, 0xAE, 0x72, 0x80, 0x6E, 0x2D, 0x02, 0x31, 0x00, 0x86, 0xD5, 0xD5, 0x6C, 0x2B, 0x90, 0xFB,
    0x3D, 0xB6, 0x84, 0x68, 0x93, 0xD3, 0xBD, 0xD8, 0xFC, 0x0D, 0x64, 0x77, 0x36, 0x90, 0x8A, 0xE4,
    0xBB, 0xD9, 0x60, 0x3B, 0x78, 0x9B, 0x58, 0x9A, 0x31, 0x71, 0xCB, 0x83, 0xB8, 0xFE, 0x54, 0x6A,
    0xAB, 0xF8, 0x3B, 0x07, 0x8B, 0xE0, 0xCE, 0x26, 0x6F,
];

pub fn get_rsp_cert_chain_buff() -> SpdmCertChainBuffer {
    let mut buff = SpdmCertChainBuffer::default();
    let cert_chain_payload_len = RSP_CERT_CHAIN_PAYLOAD.len();
    let buff_len = buff.data.len();
    let copy_len = if cert_chain_payload_len <= buff_len {
        cert_chain_payload_len
    } else {
        buff_len
    };

    buff.data_size = copy_len as u16;
    buff.data[..copy_len].copy_from_slice(&RSP_CERT_CHAIN_PAYLOAD[..copy_len]);
    buff
}
