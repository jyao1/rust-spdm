name: Coverage
on: [pull_request, push]
env:
  AS: nasm
  AR_x86_64_unknown_uefi: llvm-ar
  CC_x86_64_unknown_uefi: clang
  AR_x86_64_unknown_none: llvm-ar
  CC_x86_64_unknown_none: clang
  RUST_TOOLCHAIN: nightly-2022-05-15
  TOOLCHAIN_PROFILE: minimal
jobs:
  build:
    runs-on: ubuntu-latest
    name: Generate coverage
    steps:
      - uses: ilammy/setup-nasm@v1
      - uses: actions/checkout@v1

      - name: Run cargo install grcov
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: grcov

      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "10.0"
          directory: ${{ runner.temp }}/llvm

      - name: install NASM
        uses: ilammy/setup-nasm@v1

      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: ${{ env.TOOLCHAIN_PROFILE }}
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          override: true
          components: rust-src

      - name: Cache
        uses: Swatinem/rust-cache@v1

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true
          components: rust-src, llvm-tools-preview

      - name: Install AFL (Linux)
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: afl
        if: runner.os == 'Linux'

      - name: Install Cargo-Fuzz (Linux)
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-fuzz
        if: runner.os == 'Linux'

      - name: no std check
        run: |
          cargo install cargo-xbuild
          rustup component add rust-src
          pushd spdmlib
          cargo xbuild --target x86_64-unknown-uefi --release --no-default-features --features="spdm-ring"

      - name: set core_pattern for core
        run: |
          sudo su - root <<EOF
          echo core >/proc/sys/kernel/core_pattern
          pushd /sys/devices/system/cpu
          echo performance | tee cpu*/cpufreq/scaling_governor
          popd
          exit
          EOF

      - name: cargo build
        env:
          LLVM_PROFILE_FILE: your_name-%p-%m.profraw
          RUSTFLAGS: -Zinstrument-coverage
        run: |
          cargo build -p spdm-responder-emu -p spdm-requester-emu

      - name: Build fuzz
        run: ./sh_script/fuzz_run.sh -c Scoverage

      - name: cargo tests
        run: cargo test

      - name: run responder and requester script
        env:
          LLVM_PROFILE_FILE: rust-spdm-%p%m.profraw
          RUSTFLAGS: -Zinstrument-coverage
        run: |
          cargo run -p spdm-responder-emu & 
          sleep 5
          cargo run -p spdm-requester-emu
      - name: Run tests and collect coverage
        run: |
          grcov $(find . -name "*.profraw") \
            --branch \
            --binary-path ./target/debug/ \
            -s . \
            -t lcov \
            --ignore-not-existing \
            -o lcov.info
      - name: Upload coverage reports to Codecov with GitHub Action
        uses: codecov/codecov-action@v3
        with:
          files: ./lcov.info
          fail_ci_if_error: true
          verbose: true
